// <auto-generated />
using System;
using DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(CryptoDashContext))]
    partial class CryptoDashContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Concrete.CryptoHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CryptoCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CryptoHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseCurrencyCode = "USD",
                            CreatedAt = new DateTime(2023, 9, 29, 0, 14, 27, 146, DateTimeKind.Local).AddTicks(1796),
                            CreatedBy = 0,
                            CryptoCurrencyCode = "BTC",
                            IsActive = true,
                            IsDeleted = false,
                            Rate = 15000m,
                            UpdatedAt = new DateTime(2023, 9, 29, 0, 14, 27, 146, DateTimeKind.Local).AddTicks(1811),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 2,
                            BaseCurrencyCode = "USD",
                            CreatedAt = new DateTime(2023, 9, 28, 0, 14, 27, 146, DateTimeKind.Local).AddTicks(1833),
                            CreatedBy = 0,
                            CryptoCurrencyCode = "BTC",
                            IsActive = true,
                            IsDeleted = false,
                            Rate = 10000m,
                            UpdatedAt = new DateTime(2023, 9, 28, 0, 14, 27, 146, DateTimeKind.Local).AddTicks(1838),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 3,
                            BaseCurrencyCode = "USD",
                            CreatedAt = new DateTime(2023, 9, 22, 0, 14, 27, 146, DateTimeKind.Local).AddTicks(1845),
                            CreatedBy = 0,
                            CryptoCurrencyCode = "BTC",
                            IsActive = true,
                            IsDeleted = false,
                            Rate = 25000m,
                            UpdatedAt = new DateTime(2023, 9, 22, 0, 14, 27, 146, DateTimeKind.Local).AddTicks(1847),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 4,
                            BaseCurrencyCode = "USD",
                            CreatedAt = new DateTime(2023, 8, 29, 0, 14, 27, 146, DateTimeKind.Local).AddTicks(1852),
                            CreatedBy = 0,
                            CryptoCurrencyCode = "BTC",
                            IsActive = true,
                            IsDeleted = false,
                            Rate = 5000m,
                            UpdatedAt = new DateTime(2023, 8, 29, 0, 14, 27, 146, DateTimeKind.Local).AddTicks(1856),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 5,
                            BaseCurrencyCode = "USD",
                            CreatedAt = new DateTime(2023, 7, 29, 0, 14, 27, 146, DateTimeKind.Local).AddTicks(1863),
                            CreatedBy = 0,
                            CryptoCurrencyCode = "BTC",
                            IsActive = true,
                            IsDeleted = false,
                            Rate = 7500m,
                            UpdatedAt = new DateTime(2023, 7, 29, 0, 14, 27, 146, DateTimeKind.Local).AddTicks(1864),
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
